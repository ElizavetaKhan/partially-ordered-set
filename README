1. Реализовать класс частично упорядоченного множества – массив пар целых чисел.
2. Реализовать класс списка списков для создания и хранения пар (массив пар передается параметром в метод инициализации). В этом же классе реализовать метод топологической сортировки. Если при инициализации списка списков обнаруживается пара, не удовлетворяющая свойству иррефлексивности, то метод возвращает значение false и процесс инициализации прекращается. В противном случае метод возвращает значение true. Метод, выполняющий топологическую сортировку, возвращает значение true, если удалось расположить элементы множества в линейном порядке, в противном случае возвращается значение false.
3. Реализовать класс с методом main(). В этом методе создать объекты частично упорядоченного множества и списка списков. Список списков инициализировать и, если возможно, выполнить топологическую сортировку. Вывести на экран элементы множества в линейном порядке или сообщить о невозможности упорядочивания исходного множества.

Множество называется частично упорядоченным, если упорядочение задано не на всех его элементах, а только на некоторых парах.
В общем случае частичный порядок на множестве S – это отношение между элементами этого множества. Оно обозначается символом < (предшествует) и удовлетворяет трем следующим свойствам для любых различных элементов x, y и z на S:
если x < y и y <z, то x < z (транзитивность);
если x < y, то не y < x (асимметричность);
не x < x (иррефлексивность).
Топологическая сортировка преобразует частичный порядок в линейный. Другими словами, для всех элементов из S должны быть выполнены вышеуказанные свойства.

Лабораторная работа состоит из двух этапов: проектирование и реализация. Пока не принят этап проектирования, реализация не рассматривается!
Проект представляется в виде текстового файла, в котором описываются все классы и их данные. Кроме того, на естественном языке перечисляются все действия для всех конструкторов, операций и вспомогательных методов.

Общие требования:
Не использовать коллекции.
Не использовать доступ по умолчанию. Указывать доступ для всего, классов, данных, методов.
Для всех классов перед каждым методом (кроме main()), в комментариях должно быть записано: какую задачу решает метод, какие параметры ему передаются, что возвращается в результате.
Для всех объявленных в методах переменных, включая метод main(), в комментариях необходимо указать их назначение.
Все важные для понимания методов моменты должны сопровождаться комментариями.
